name: Update adg-dns Rule

on:
  schedule:
    - cron: '0 16 * * *'
  workflow_dispatch:

jobs:
  update-rules:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        sudo apt-get update
        sudo apt-get install -y jq
        
    - name: Download and process rules
      run: |
        FILES=()
        # 下载 adblockdns.txt 文件
        curl -o adblockdns.txt https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdns.txt
        FILES+=("adblockdns.txt")
        # 下载 AWAvenue-Ads-Rule-Singbox.json 文件
        curl -o awavenue_ads_rule_singbox.json https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Singbox-regex.json

        # 清理 JSON 文件中的注释
        sed '/^\/\/.*$/d' awavenue_ads_rule_singbox.json > awavenue_ads_rule_clean.json

        # 确保 JSON 文件格式正确
        jq . awavenue_ads_rule_clean.json

        # 从清理后的 JSON 文件中提取域名并添加到黑名单中
        jq -r '.rules[].domain[]' awavenue_ads_rule_clean.json > extracted_domains.txt
        FILES+=("extracted_domains.txt")
        # 合并所有文件
        cat "${FILES[@]}" > combined_rules.txt

        # 处理 blacklist 域名
        grep '^\|\|' combined_rules.txt | sed '/^!/d; s/^||//; s/\^$//' | sort -u | sed '/^$/d' > new_blacklist.txt

        # 处理 whitelist 域名
        grep '^@@||' combined_rules.txt | sed '/^!/d; s/^@@||//; s/\^$//' | sort -u | sed '/^$/d' > new_whitelist.txt
        
        # 合并新旧 whitelist 并去重
        cat whitelist.txt new_whitelist.txt | sort -u | sed '/^$/d' > temp_whitelist.txt
        mv temp_whitelist.txt whitelist.txt

        # 合并提取的域名、新的 blacklist 和 block.txt 并去重
        cat extracted_domains.txt new_blacklist.txt block.txt | sort -u | sed '/^$/d' > temp_blacklist.txt
        mv temp_blacklist.txt blacklist.txt

        # 从 blacklist 中删除 whitelist 域名（确保每次都进行去重）
        grep -vxFf whitelist.txt blacklist.txt > temp_blacklist.txt
        mv temp_blacklist.txt blacklist.txt

        # 删除 blacklist 中任何剩余的以 @@ 开头的条目
        sed -i '/^@@/d' blacklist.txt

    - name: Create adg-dns.json
      run: |
        echo '{
          "version": 2,
          "rules": [
            {
              "domain_suffix": [' > adg-dns.json
        sed 's/.*/"&",/' blacklist.txt | sed '/^""$/d; /^"@@/d' >> adg-dns.json
        sed -i '$ s/,$//' adg-dns.json
        echo '      ]
            }
          ]
        }' >> adg-dns.json

        jq . adg-dns.json > formatted_adg-dns.json
        mv formatted_adg-dns.json adg-dns.json

    - name: Debug adg-dns.json
      run: cat adg-dns.json

    - name: Setup sing-box (pre-release)
      run: |
        LATEST_PRE_VERSION=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '[.[] | select(.prerelease == true)][0].tag_name')
        echo "Latest sing-box pre-release version: $LATEST_PRE_VERSION"
        wget https://github.com/SagerNet/sing-box/releases/download/${LATEST_PRE_VERSION}/sing-box-${LATEST_PRE_VERSION#v}-linux-amd64.tar.gz
        tar -xzvf sing-box-${LATEST_PRE_VERSION#v}-linux-amd64.tar.gz
        sudo mv sing-box-${LATEST_PRE_VERSION#v}-linux-amd64/sing-box /usr/local/bin/
        sing-box version

    - name: Convert adg-dns.json to adg-dns.srs
      run: |
        sing-box rule-set compile --output adg-dns.srs adg-dns.json

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add blacklist.txt whitelist.txt adg-dns.json adg-dns.srs
        git commit -m "Update DNS rules" || echo "No changes to commit"
        git push
