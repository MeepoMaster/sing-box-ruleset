name: Update adg-dns Rule

on: 
  schedule:
    - cron: '0 0,8,16 * * *'
  workflow_dispatch:

env:
  TZ: Asia/Shanghai  

jobs:
  update-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Download and process rules
        run: |
          FILES=()
          # 下载 adblockdns.txt 文件
          curl -o adblockdns.txt https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdns.txt
          FILES+=("adblockdns.txt")
          
          # 下载 AWAvenue-Ads-Rule-Singbox.json 文件
          curl -o awavenue_ads_rule_singbox.json https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Singbox-regex.json
          
          # 清理 JSON 文件中的注释
          sed '/^\/\/.*$/d' awavenue_ads_rule_singbox.json > awavenue_ads_rule_clean.json
          
          # 确保 JSON 文件格式正确
          jq . awavenue_ads_rule_clean.json
          
          # 从清理后的 JSON 文件中提取域名（如果需要，可用于其他处理）
          jq -r '.rules[].domain[]' awavenue_ads_rule_clean.json > extracted_domains.txt
          FILES+=("extracted_domains.txt")
          
          # 合并所有文件
          cat "${FILES[@]}" > combined_rules.txt
          
          # 处理 blacklist 域名
          grep '^\|\|' combined_rules.txt | sed '/^!/d; s/^||//; s/\^$//' | sort -u | sed '/^$/d' > new_blacklist.txt
          
          # 处理 whitelist 域名
          grep '^@@||' combined_rules.txt | sed '/^!/d; s/^@@||//; s/\^$//' | sort -u | sed '/^$/d' > temp_whitelist.txt
          
          # 将提取的白名单与 noblock.txt 合并
          cat temp_whitelist.txt noblock.txt | sort -u | sed '/^$/d' > whitelist.txt
          
          # 合并 blacklist 和 block.txt，并去重
          cat new_blacklist.txt block.txt | sort -u | sed '/^$/d' > temp_blacklist.txt
          mv temp_blacklist.txt blacklist.txt
          
          # 从 blacklist 中删除 whitelist 域名
          grep -vxFf whitelist.txt blacklist.txt > temp_blacklist.txt
          mv temp_blacklist.txt blacklist.txt
          
          # 删除 blacklist 中任何剩余的以 @@ 开头的条目
          sed -i '/^@@/d' blacklist.txt
          
          # 将所有域名文件按字母顺序排序，并强制标记为修改
          LC_ALL=C sort -u -o blacklist.txt blacklist.txt
          LC_ALL=C sort -u -o block.txt block.txt 
          LC_ALL=C sort -u -o noblock.txt noblock.txt
          LC_ALL=C sort -u -o whitelist.txt whitelist.txt
          touch blacklist.txt block.txt noblock.txt whitelist.txt
          
          # 动态提取 awavenue 文件中的 domain_regex 部分（内容可能变化）
          jq -r '.domain_regex[]' awavenue_ads_rule_clean.json > extracted_domain_regex.txt

      - name: Create adg-dns.json
        run: |
          echo '{' > adg-dns.json
          echo '  "version": 2,' >> adg-dns.json
          echo '  "rules": [' >> adg-dns.json
          echo '    {' >> adg-dns.json
          echo '      "domain_suffix": [' >> adg-dns.json
          # 使用 blacklist.txt 中的条目作为 domain_suffix
          sed 's/.*/        "&",/' blacklist.txt | sed '$ s/,$//' >> adg-dns.json
          echo '      ],' >> adg-dns.json
          echo '      "domain_regex": [' >> adg-dns.json
          # 动态添加从 awavenue 文件中提取的 domain_regex 条目
          sed 's/.*/        "&",/' extracted_domain_regex.txt | sed '$ s/,$//' >> adg-dns.json
          echo '      ]' >> adg-dns.json
          echo '    }' >> adg-dns.json
          echo '  ]' >> adg-dns.json
          echo '}' >> adg-dns.json

      - name: Format JSON
        run: |
          jq . adg-dns.json > formatted_adg-dns.json
          mv formatted_adg-dns.json adg-dns.json

      - name: Debug adg-dns.json
        run: cat adg-dns.json

      - name: Setup sing-box (release)
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r .tag_name)
          echo "Latest sing-box version: $LATEST_VERSION"
          wget https://github.com/SagerNet/sing-box/releases/download/${LATEST_VERSION}/sing-box-${LATEST_VERSION#v}-linux-amd64.tar.gz
          tar -xzvf sing-box-${LATEST_VERSION#v}-linux-amd64.tar.gz
          sudo mv sing-box-${LATEST_VERSION#v}-linux-amd64/sing-box /usr/local/bin/
          sing-box version

      - name: Convert adg-dns.json to adg-dns.srs
        run: |
          sing-box rule-set compile --output adg-dns.srs adg-dns.json

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add blacklist.txt whitelist.txt block.txt noblock.txt adg-dns.json adg-dns.srs
          git commit -m "Force update DNS rules with sorted files" || echo "No changes to commit"
          git push
