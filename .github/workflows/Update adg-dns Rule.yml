name: Update adg-dns Rule

on: 
  schedule:
    - cron: 0 0,8,16 * * *
  workflow_dispatch:

env:
  TZ: Asia/Shanghai  

jobs:
  update-rules:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        sudo apt-get update
        sudo apt-get install -y jq coreutils
        
    - name: Download and process rules
      run: |
        # 下载基础规则
        curl -o adblockdns.txt https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdns.txt
        curl -o awavenue_ads_rule_singbox.json https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Singbox-regex.json

        # 清理AWAvenue规则
        sed '/^\/\//d' awavenue_ads_rule_singbox.json | jq . > awavenue_clean.json

        # 提取域名 (精确匹配)
        jq -r '.rules[].domain[]? | select(. != null)' awavenue_clean.json > extracted_domains.txt

        # 提取正则表达式 (严格处理)
        jq -r '.rules[].domain_regex[]? | select(. != null)' awavenue_clean.json \
          | grep -vE '^(#|$)' \
          | sed 's/\r$//' \
          | awk 'NF { print "\"" $0 "\"," }' \
          | head -c -2 > extracted_regex.txt  # 移除最后一个逗号

        # 合并规则源
        cat adblockdns.txt extracted_domains.txt > combined_sources.txt

        # 处理黑名单
        grep '^\|\|' combined_sources.txt \
          | sed -E 's/^\|\|([^\/\^]+)[\/\^].*/\1/' \
          | sort -u \
          | grep -v '^!' > base_blacklist.txt

        # 处理白名单
        grep '^@@||' combined_sources.txt \
          | sed -E 's/^@@\|\|([^\/\^]+)[\/\^].*/\1/' \
          | sort -u > base_whitelist.txt

        # 最终名单处理
        comm -23 <(sort base_blacklist.txt) <(sort block.txt) | sort -u > temp_blacklist.txt
        comm -23 <(sort temp_blacklist.txt) <(sort noblock.txt) | sort -u > blacklist.txt
        comm -23 <(sort base_whitelist.txt) <(sort noblock.txt) | sort -u > whitelist.txt

    - name: Generate adg-dns.json
      run: |
        # 生成JSON骨架
        echo '{
          "version": 2,
          "rules": [
            {' > adg-dns.json

        # 添加domain_suffix
        echo '      "domain_suffix": [' >> adg-dns.json
        if [ -s blacklist.txt ]; then
          sed 's/.*/        "&",/' blacklist.txt | sed '$ s/,$//' >> adg-dns.json
        fi
        echo '      ],' >> adg-dns.json

        # 添加domain_regex (严格格式化)
        echo '      "domain_regex": [' >> adg-dns.json
        if [ -s extracted_regex.txt ]; then
          sed 's/^/        /' extracted_regex.txt >> adg-dns.json
        fi
        echo '      ]' >> adg-dns.json

        # 闭合JSON结构
        echo '    }
          ]
        }' >> adg-dns.json

        # 格式化验证
        jq . adg-dns.json > temp.json && mv temp.json adg-dns.json

    - name: Debug output
      run: |
        echo "=== 黑名单样例 ==="
        head -n 5 blacklist.txt
        echo "=== 正则表达式样例 ==="
        head -n 5 extracted_regex.txt
        echo "=== JSON 验证 ==="
        jq empty adg-dns.json && echo "JSON验证通过" || exit 1

    - name: Generate sing-box rule
      run: |
        LATEST_SB=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r .tag_name)
        wget https://github.com/SagerNet/sing-box/releases/download/${LATEST_SB}/sing-box-${LATEST_SB#v}-linux-amd64.tar.gz
        tar -xzf sing-box-*-linux-amd64.tar.gz
        ./sing-box-*/sing-box rule-set compile adg-dns.json -o adg-dns.srs

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add *.txt *.json *.srs
        git commit -m "Update: $(date +'%Y-%m-%d %H:%M')" || echo "No changes"
        git push
